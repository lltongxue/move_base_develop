GlobalPlanner:
  # (bool, default: true):指定是否允许规划器创建跨越未知空间的路径。
  # 只设置该参数为true还不行,还要在costmap_commons_params.yaml中设置track_unknown_space参数也为true才行。
  allow_unknown: false

  # (double, default: 0.0)：对规划器的目标点的容忍。规划器将尝试创建一个尽可能接近指定目标的计划，但不会超过default_tolerance。
  default_tolerance: 0.2

  # (bool, default: false)：是否显示从PointCloud2计算得到的潜在区域.
  visualize_potential: false

  # (bool, default: true)：设置为true,将使用dijkstra算法,否则使用A*算法.
  use_dijkstra: true

  # (bool, default: true)：设置为true,将使用二次函数近似函数,否则使用更加简单的计算方式,这样节省硬件计算资源.
  use_quadratic: true

  # (bool, default: false)：如果设置为true,则会规划一条沿着网格边界的路径,偏向于直线穿越网格,否则将使用梯度下降算法,路径更为光滑点.
  use_grid_path: false

  # (bool, default: false)：若在某些情况下,想让global_planner完全复制navfn的功能,那就设置为true,
  # 但是需要注意navfn是非常旧的ROS系统中使用的,现在已经都用global_planner代替navfn了,所以不建议设置为true.
  old_navfn_behavior: false
 
  # (int, default: 253)：致命代价值,默认是设置为253,可以动态来配置该参数.
  lethal_cost: 253

  # (int, default: 50)：中等代价值,默认设置是50,可以动态配置该参数.
  neutral_cost: 50

  # (double, default: 3.)：代价地图与每个代价值相乘的因子.
  cost_factor: 3.0

  # (bool, default: True)：是否发布costmap的势函数.
  publish_potential: true

  # (int, default: 0)：如何设置每个点的方向（可动态重新配置）:
  # None = 0,
  # Forward = 1,
  # Interpolate = 2,
  # ForwardThenInterpolate = 3,
  # Backward = 4,
  # Leftward = 5,
  # Rightward = 6
  orientation_mode: 0

  # (int, default: 1)：根据orientation_mode指定的位置导数来得到使用窗口的方向.默认值1,可以动态重新配置.
  orientation_window_size: 1
